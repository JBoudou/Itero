# v0.0.10

ALTER TABLE Polls
  ADD COLUMN
    ReportVote        bool              NOT NULL  DEFAULT FALSE
  AFTER  BallotCostIsCount;


# v0.0.12

ALTER TABLE Polls
  ADD COLUMN
    State             ENUM('Waiting','Active','Terminated') NOT NULL DEFAULT 'Active'
  AFTER Created;

UPDATE Polls SET State = 'Terminated' WHERE NOT Active;

ALTER TABLE Polls
  DROP COLUMN Active,
  ADD COLUMN
    Start             datetime
  AFTER State;

DROP TRIGGER Polls_check_before_insert;
DROP TRIGGER Polls_check_before_update;
DROP PROCEDURE Polls_checker_before;

DELIMITER //

CREATE PROCEDURE Polls_checker_before (
  Title             tinytext,
  State             ENUM('Waiting','Active','Terminated'),
  Start             datetime,
  Salt              int unsigned,
  Publicity         tinyint unsigned,
  NbChoices         tinyint unsigned,
  MinNbRounds       smallint unsigned,
  MaxNbRounds       smallint unsigned,
  Deadline          datetime,
  MaxRoundDuration  time,
  RoundThreshold    double unsigned ,
  CurrentRound      tinyint unsigned,
  CurrentRoundStart timestamp
)
BEGIN
  IF length(Title) < 3 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Title field is too short';
  END IF;
  IF State = '' THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Unauthorized State value';
  END IF;
  IF Start IS NULL AND State = 'Waiting' THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A Start date must be given for Waiting polls';
  END IF;
  IF Salt >= 4194304 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Salt must be 22 bits long';
  END IF;
  IF NbChoices < 2 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'NbChoices must be at least 2';
  END IF;
  IF MaxNbRounds < MinNbRounds THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'MaxNbRounds must be greater than MinNbRounds';
  END IF;
  IF MaxNbRounds IS NULL AND Deadline IS NULL THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'One amongst MaxNbRounds and Deadline must not be NULL';
  END IF;
  IF Publicity < 4 AND MaxRoundDuration IS NULL THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'MaxRoundDuration can not be NULL unless Publicity is Invited';
  END IF;
  IF MaxRoundDuration < '00:01:00' THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'MaxRoundDuration must be at least one minute';
  END IF;
  IF RoundThreshold < 0 OR RoundThreshold > 1 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'RoundThreshold must be in [0;1]';
  END IF;
  IF CurrentRound > MaxNbRounds THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CurrentRound must be at most MaxNbRounds';
  END IF;
END;
//

CREATE TRIGGER Polls_check_before_insert
  BEFORE INSERT ON Polls FOR EACH ROW
BEGIN
  IF NEW.CurrentRound != 0 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CurrentRound must be zero on INSERT';
  END IF;
  SET NEW.Created           = CURRENT_TIMESTAMP();
  SET NEW.CurrentRoundStart = CURRENT_TIMESTAMP();
  CALL Polls_checker_before(NEW.Title, NEW.State, NEW.Start, NEW.Salt, NEW.Publicity, NEW.NbChoices,
                            NEW.MinNbRounds, NEW.MaxNbRounds, NEW.Deadline, NEW.MaxRoundDuration,
                            NEW.RoundThreshold, NEW.CurrentRound, NEW.CurrentRoundStart);
END;
//

CREATE TRIGGER Polls_check_before_update
  BEFORE UPDATE ON Polls FOR EACH ROW
BEGIN
  IF NEW.Created != OLD.Created THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Created cannot be changed';
  END IF;
  IF NEW.CurrentRound > OLD.CurrentRound THEN
    SET NEW.CurrentRoundStart = CURRENT_TIMESTAMP();
  END IF;
  IF OLD.State = 'Waiting' AND NEW.State = 'Active' THEN
    SET NEW.CurrentRound = 0;
    SET NEW.CurrentRoundStart = CURRENT_TIMESTAMP();
  END IF;
  CALL Polls_checker_before(NEW.Title, NEW.State, NEW.Start, NEW.Salt, NEW.Publicity, NEW.NbChoices,
                            NEW.MinNbRounds, NEW.MaxNbRounds, NEW.Deadline, NEW.MaxRoundDuration,
                            NEW.RoundThreshold, NEW.CurrentRound, NEW.CurrentRoundStart);
END;
//

DELIMITER ;
