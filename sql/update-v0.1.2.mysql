ALTER TABLE Users
  MODIFY COLUMN Email   varchar(128),
  MODIFY COLUMN Name    varchar(64),
  MODIFY COLUMN Passwd  binary(32),
  ADD    COLUMN Hash    binary(3),
  ADD CONSTRAINT Users_Hash_unique UNIQUE (Hash);

DELIMITER //

CREATE OR REPLACE PROCEDURE Users_checker_before (
  Email   varchar(128),
  Name    varchar(64),
  Passwd  binary(32),
  Hash    binary(3)
)
BEGIN
  IF Hash IS NULL AND (Email IS NULL OR Name IS NULL OR Passwd IS NULL) THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'When Hash is NULL, Email, Name and Passwd must not be NULL';
  END IF;
  IF Hash IS NULL AND Email NOT LIKE '_%@_%.__%' THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Email field is not valid';
  END IF;
  IF Hash IS NULL AND length(Name) < 2 THEN
    SIGNAL SQLSTATE '44999' SET MESSAGE_TEXT = 'Name field is too short';
  END IF;
END;
//

CREATE OR REPLACE TRIGGER Users_check_before_insert
  BEFORE INSERT ON Users FOR EACH ROW
BEGIN
  SET NEW.Created = CURRENT_TIMESTAMP();
  CALL Users_checker_before(NEW.Email, NEW.Name, NEW.Passwd, NEW.Hash);
END;
//

CREATE OR REPLACE TRIGGER Users_check_before_update
  BEFORE UPDATE ON Users FOR EACH ROW
BEGIN
  IF NEW.Created != OLD.Created THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Created cannot be changed';
  END IF;
  CALL Users_checker_before(NEW.Email, NEW.Name, NEW.Passwd, NEW.Hash);
END;
//

DELIMITER ;
